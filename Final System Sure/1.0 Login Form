// MAY 17, 2024

import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import java.awt.GridLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.JPasswordField;
import javax.swing.JButton;
import javax.swing.JCheckBox;

import java.awt.Button;
import java.awt.Checkbox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.SwingConstants;

public class Login_Form extends JFrame implements ActionListener {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField usernameTField;
	private JPasswordField passwordTField;
	private JCheckBox showpassChkBox;
	
	
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		
		
		
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Login_Form frame = new Login_Form();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		
		Student_Registration_Form studentForm = new Student_Registration_Form();
	}

	/**
	 * Create the frame.
	 */
	public Login_Form() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(900, 630);
		setLocationRelativeTo(null);
		setResizable(false);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel mainPanel = new JPanel();
		mainPanel.setBounds(-54, -38, 1016, 690);
		contentPane.add(mainPanel);
		mainPanel.setLayout(new GridLayout(1, 2));
		
		JPanel leftPanel = new JPanel();
		leftPanel.setBackground(new Color(0x14532d));
		mainPanel.add(leftPanel);
		leftPanel.setLayout(null);
		
		JLabel kldBuildingIMG = new JLabel("");
		kldBuildingIMG.setIcon(new ImageIcon("C:\\Users\\Jonas\\Downloads\\123.png"));
		kldBuildingIMG.setHorizontalAlignment(SwingConstants.CENTER);
		kldBuildingIMG.setBounds(10, 10, 543, 731);
		leftPanel.add(kldBuildingIMG);
		
		JPanel rightPanel = new JPanel();
		rightPanel.setBackground(new Color(0xF5F5F5));
		mainPanel.add(rightPanel);
		rightPanel.setLayout(null);
		
		JLabel loginHeaderLabel = new JLabel("LOGIN");
		loginHeaderLabel.setBackground(new Color(0, 0, 160));
		loginHeaderLabel.setFont(new Font("Segoe UI", Font.BOLD, 36));
		loginHeaderLabel.setForeground(new Color(0x14532d));
		loginHeaderLabel.setBounds(166, 72, 191, 116);
		rightPanel.add(loginHeaderLabel);
		
		JLabel usernameLabel = new JLabel("Username:");
		usernameLabel.setFont(new Font("Segoe UI Semibold", Font.PLAIN, 18));
		usernameLabel.setBounds(32, 190, 116, 29);
		rightPanel.add(usernameLabel);
		
		usernameTField = new JTextField();
		usernameTField.setForeground(new Color(0, 0, 0));
		usernameTField.setFont(new Font("Segoe UI Historic", Font.PLAIN, 18));
		usernameTField.setBounds(32, 219, 370, 52);
		usernameTField.setBorder(new LineBorder(new Color(0x14532d)));
		rightPanel.add(usernameTField);
		usernameTField.setColumns(10);
		
		JLabel passwordLabel = new JLabel("Password:");
		passwordLabel.setFont(new Font("Segoe UI Semibold", Font.PLAIN, 18));
		passwordLabel.setBounds(29, 300, 116, 29);
		rightPanel.add(passwordLabel);
		
		passwordTField = new JPasswordField();
		passwordTField.setFont(new Font("Segoe UI Historic", Font.PLAIN, 18));
		passwordTField.setBorder(new LineBorder(new Color(0x14532d)));
		passwordTField.setBounds(29, 328, 370, 51);
		passwordTField.setEchoChar('â€¢');
		rightPanel.add(passwordTField);
		
		showpassChkBox = new JCheckBox("Show Password");
		showpassChkBox.setFont(new Font("Segoe UI Light", Font.PLAIN, 12));
		showpassChkBox.setFocusable(false);
		showpassChkBox.addActionListener(this);
		showpassChkBox.setBounds(29, 385, 133, 21);
		
		rightPanel.add(showpassChkBox);
		
		JButton loginBTN = new JButton("Login");
		
		   
		loginBTN.addActionListener(new ActionListener() {
		    public void actionPerformed(ActionEvent e) {
		        try {
		            // Load the MySQL JDBC driver
		            Class.forName("com.mysql.cj.jdbc.Driver");
		            
		            // KONEKSYON SA DATABASE
		            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/admission_system_final", "root", "")) {
		                System.out.println("Connection created");

		                // Create statement
		                try (Statement stmt = con.createStatement()) {
		                    // Query for Admin login
		                    String sqlAdminQuery = "SELECT * FROM user WHERE Username = '" + usernameTField.getText() + "' AND Password = '" + passwordTField.getText() + "' AND UserType = 'Admin'";
		                    try (ResultSet rsAdmin = stmt.executeQuery(sqlAdminQuery)) {
		                        if (rsAdmin.next()) {
		                           
		                        	JOptionPane.showMessageDialog(null, "LOGIN SUCCESSFULLY AS ADMIN");
		                        	 dispose();
		                        	 Admin_Access_Form adminForm = new Admin_Access_Form();
		                        	 adminForm.setVisible(true);
		                            // Provide feedback to the user interface
		                        } else  {
		                            // Check for Student login
		                        	
		                            String sqlStudentQuery = "SELECT * FROM user WHERE Username = '" + usernameTField.getText() + "' AND Password = '" + passwordTField.getText() + "' AND UserType = 'Student'";
		                            
		                            
		                            try (ResultSet rsStudent = stmt.executeQuery(sqlStudentQuery)) {
		                                if (rsStudent.next()) {
		                                	JOptionPane.showMessageDialog(null, "LOGIN SUCCESSFULLY AS STUDENT");
		                                	dispose();
		                                	int userID = rsStudent.getInt("UserID");
		                                	String userFirstName = rsStudent.getString("FirstName");
		                                	String userMiddleName = rsStudent.getString("MiddleName");
		                                    String userLastName = rsStudent.getString("LastName");
		                                	
		                                    System.out.println(userID + " " + userFirstName + " " + userMiddleName + " " + userLastName);
		                                    PreparedStatement ps = con.prepareStatement("SELECT ApplicantID, FirstName, MiddleName, LastName, Applicant_Image FROM applicant WHERE UserID = '" + userID + "' AND FirstName = '" + userFirstName + "' AND MiddleName = '" + userMiddleName + "' AND LastName = '" + userLastName + "' AND EXISTS (SELECT 1 FROM user WHERE UserID = '" + userID + "' AND FirstName = '" + userFirstName + "' AND MiddleName = '" + userMiddleName + "' AND LastName = '" + userLastName + "' AND Username = '" + usernameTField.getText() + "' AND password = '" + passwordTField.getText() + "' AND userType = 'Student')");

		                                    try (ResultSet rsStudentSlow = ps.executeQuery()) {
		                                        if (rsStudentSlow.next()) {
		                                            int ApplicantID = rsStudentSlow.getInt("ApplicantID");
		                                            String FirstName = rsStudentSlow.getString("FirstName");
		                                            String MiddleName = rsStudentSlow.getString("MiddleName");
		                                            String LastName = rsStudentSlow.getString("LastName");
		                                            byte [] ApplicantImage = rsStudentSlow.getBytes("Applicant_Image");
		                                            Student_Profile sProfile = new Student_Profile(ApplicantID, FirstName, FirstName, MiddleName, LastName, ApplicantImage);
		                                            sProfile.setVisible(true);
		                                           
		                                            System.out.println(ApplicantID + " " + FirstName + " " + MiddleName + " " + LastName);
		                                        } else {
		                                        	System.out.println("No rows found");
		                                        }
		                                    }

		                                	
		                                	
		                                	
				                            	
		                                	
		                                	
		                                   
		                                    // Provide feedback to the user interface
		                                } else {
		                                	JOptionPane.showMessageDialog(null, "INVALID Username or Password");
		                                    // Provide feedback to the user interface
		                                }
		                            }
		                            
		                            
		                            
		                        }
		                    }
		                }
		            }
		        
		        
		        
		        
		        } catch (ClassNotFoundException | SQLException ex) {
		            ex.printStackTrace();
		            // Provide feedback to the user interface about the error
		        }
		    }
		});



		
		loginBTN.setForeground(new Color(255, 255, 255));
		loginBTN.setBackground(new Color(0x14532d));
		loginBTN.setBorder(new LineBorder(new Color(0x14532d)));
		loginBTN.setFocusable(false);
		loginBTN.setFont(new Font("Tahoma", Font.PLAIN, 15));
		loginBTN.setBounds(160, 440, 116, 52);
		rightPanel.add(loginBTN);
		
		JLabel newAccountLabel = new JLabel("I don't have an account");
		newAccountLabel.setFont(new Font("Segoe UI Historic", Font.PLAIN, 15));
		newAccountLabel.setBounds(105, 517, 157, 29);
		rightPanel.add(newAccountLabel);
		
		JLabel registerLabel = new JLabel("Register");
		registerLabel.addMouseListener(new MouseAdapter() {
		    @Override
		    public void mouseClicked(MouseEvent e) {
		        if(e.getSource() == registerLabel) {
		            // Create an instance of Student_Registration_Form and call its constructor
		            Student_Registration_Form studentForm = new Student_Registration_Form();
		            studentForm.setVisible(true);
		            // Dispose the current frame (assuming 'this' refers to your current JFrame)
		            dispose();
		        }
		    }
		});

		registerLabel.setForeground(new Color(255, 0, 0));
		registerLabel.setFont(new Font("Segoe UI Semibold", Font.PLAIN, 15));
		registerLabel.setBounds(269, 517, 171, 29);
		rightPanel.add(registerLabel);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if (showpassChkBox.isSelected()) {
			passwordTField.setEchoChar((char)0);
		} else {
			passwordTField.setEchoChar('â€¢');
		}
	}
}
